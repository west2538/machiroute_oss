<% set_meta_tags title: @og_title, site: 'まちかどルート', og: { title: @og_title + ' | まちかどルート', type: 'article', description: 'リアルRPG！サブクエストを作って共有してクリアするアプリ' },
twitter: { title: @og_title + ' | まちかどルート', description: 'リアルRPG！サブクエストを作って共有してクリアするアプリ' } %>

<div class="card">
    <h5 class="card-header"><span class="oi oi-paperclip text-info" title="タグ" aria-hidden="true"></span> タグ</h5>
    <div class="card-body">
        <p class="card-text">このタグが付いたサブクエストを表示しています。</p>
        <button type="button" class="btn btn-purple700_rsd"><%= @qtag %></button>
        <p>
        <%= link_to sanitize('<span class="oi oi-plus" title="このタグでサブクエスト作成" aria-hidden="true"></span>') + ' このタグでサブクエスト作成', form3_path(:qtag => @qtag.to_s), :class => "btn btn-sm btn-info mt-2" %>
        </p>
    </div>
</div>

<div class="card-columns mt-3" id="tag_item">
    <%= render partial: 'tag', collection: @post, as: :post %>
</div>
<%= link_to_next_page @post, 'つづきを見る', remote: true, id: 'tag_more_link', class: 'btn btn-info btn-block', data: { disable_with: "読み込み中 <i class='fa fa-spinner fa-spin'></i>" } %>

<script>
$(function () {
  if (!navigator.vendor.indexOf("Apple")==0 && /\sSafari\//.test(navigator.userAgent)) {
    return;
  }

  var formHandler = function (e) {
    var rails = $.rails;
    var form = $(this),
      remote = form.data('remote') !== undefined,
      blankRequiredInputs,
      nonBlankFileInputs;

    if (!rails.allowAction(form)) return rails.stopEverything(e);

    // skip other logic when required values are missing or file upload is present
    if (form.attr('novalidate') == undefined) {
      blankRequiredInputs = rails.blankInputs(form, rails.requiredInputSelector);
      if (blankRequiredInputs && rails.fire(form, 'ajax:aborted:required', [blankRequiredInputs])) {
        return rails.stopEverything(e);
      }
    }

    if (remote) {
      nonBlankFileInputs = rails.nonBlankInputs(form, rails.fileInputSelector);
      if (nonBlankFileInputs) {
        // slight timeout so that the submit button gets properly serialized
        // (make it easy for event handler to serialize form without disabled values)
        setTimeout(function(){ rails.disableFormElements(form); }, 13);
        var aborted = rails.fire(form, 'ajax:aborted:file', [nonBlankFileInputs]);

        // re-enable form elements if event bindings return false (canceling normal form submission)
        if (!aborted) { setTimeout(function(){ rails.enableFormElements(form); }, 13); }

        return aborted;
      }

      rails.handleRemote(form);
      return false;

    } else {
      if (!e.isTrigger) {
        e.preventDefault();
        rails.disableFormElements(form);
        setTimeout(function(){ form.trigger('submit'); }, 13);
      }
    }
  };

  $(document).undelegate('form', 'submit.rails');
  $(document).delegate('form', 'submit.rails', formHandler);
});
</script>